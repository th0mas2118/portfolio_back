name: Build and Push Docker Image (Optimized for Speed)

# Déclenché uniquement pour les tags
on:
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      # Étape 1: Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Étape 2: Configurer Docker Buildx avec cache optimisé
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
            image=moby/buildkit:master
      
      # Étape 3: Se connecter à GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      
      # Étape 4: Extraire les métadonnées
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/portfolio-backend
          tags: |
            type=ref,event=tag
            type=raw,value=latest
            type=semver,pattern={{version}}
      
      # Étape 5: Build super optimisé (AMD64 uniquement)
      - name: Build and push (Super Fast)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.k3s
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Cache multi-niveaux pour performance maximale
          cache-from: |
            type=gha
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/portfolio-backend:cache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/portfolio-backend:cache,mode=max
          # Optimisations Buildkit avancées
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            COMPOSER_CACHE_DIR=/tmp/composer-cache
          # Secrets pour optimisations
          secrets: |
            GIT_AUTH_TOKEN=${{ github.token }}
