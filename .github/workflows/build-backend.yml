name: Build and Push Docker Image

# Définit quand ce workflow sera déclenché
on:
  push:
    # Se déclenche uniquement pour les tags
    tags:
      - '*'
    # Temporaire: aussi sur la branche de test
    branches:
      - 'feature/docker-k3s'

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # Utilise une machine Ubuntu pour exécuter les tâches
    
    steps:
      # Étape 1: Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Étape 2: Configurer Docker Buildx (pour les builds multi-plateformes)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Étape 3: Se connecter à GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      
      # Étape 4: Extraire les métadonnées (comme le numéro de version du tag)
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/portfolio-backend
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
            type=semver,pattern={{version}}
      
      # Étape 5: Construire et pousser l'image Docker
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.k3s
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
